name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest black
          pip install -r rag-backend/requirements.txt
          pip install -r rag-streamlit/requirements.txt

      - name: Lint with flake8
        run: |
          # Combine checks: max-line-length=127, ignore E501 & W503, check complexity (max 15), exclude node_modules
          flake8 . --count --max-line-length=127 --max-complexity=15 --ignore=E501,W503 --exclude=node_modules,__pycache__,.git,.venv,venv,ENV,env --statistics

      - name: Check formatting with black
        run: |
          black --check .

      - name: Run tests
        run: |
          if [ -d "rag-backend/tests" ]; then
            pytest rag-backend/tests
          else
            echo "No backend tests found, skipping."
          fi

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and test Docker image
        run: |
          echo "Building Docker image..."
          docker build -t rag-app .
          echo "Running Docker container in background..."
          docker run -d --name rag-container -p 8000:8000 -p 8501:8501 rag-app
          echo "Waiting for services to start..."
          sleep 15
          echo "Checking FastAPI endpoint..."
          if docker ps -f name=rag-container --format '{{.Names}}' | grep -q rag-container; then
            curl --fail --silent --show-error http://localhost:8000/docs || (echo "FastAPI check failed" && docker logs rag-container && exit 1)
            echo "Service checks passed (FastAPI confirmed)."
          else
            echo "Container failed to start."
            docker logs rag-container || echo "Could not retrieve logs for stopped container."
            exit 1
          fi
        env:
           ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        # Consider adding a docker stop/rm step here if needed 