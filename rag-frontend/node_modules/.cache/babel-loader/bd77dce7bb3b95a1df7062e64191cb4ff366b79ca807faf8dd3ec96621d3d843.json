{"ast":null,"code":"var _s = $RefreshSig$();\nimport { __rest, __assign } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport * as React from 'react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\nfunction ReorderGroup(_a, externalRef) {\n  _s();\n  var children = _a.children,\n    _b = _a.as,\n    as = _b === void 0 ? \"ul\" : _b,\n    _c = _a.axis,\n    axis = _c === void 0 ? \"y\" : _c,\n    onReorder = _a.onReorder,\n    values = _a.values,\n    props = __rest(_a, [\"children\", \"as\", \"axis\", \"onReorder\", \"values\"]);\n  var Component = useConstant(function () {\n    return motion(as);\n  });\n  var order = [];\n  var isReordering = useRef(false);\n  invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n  var context = {\n    axis: axis,\n    registerItem: function (value, layout) {\n      /**\n       * Ensure entries can't add themselves more than once\n       */\n      if (layout && order.findIndex(function (entry) {\n        return value === entry.value;\n      }) === -1) {\n        order.push({\n          value: value,\n          layout: layout[axis]\n        });\n        order.sort(compareMin);\n      }\n    },\n    updateOrder: function (id, offset, velocity) {\n      if (isReordering.current) return;\n      var newOrder = checkReorder(order, id, offset, velocity);\n      if (order !== newOrder) {\n        isReordering.current = true;\n        onReorder(newOrder.map(getValue).filter(function (value) {\n          return values.indexOf(value) !== -1;\n        }));\n      }\n    }\n  };\n  useEffect(function () {\n    isReordering.current = false;\n  });\n  return /*#__PURE__*/React.createElement(Component, __assign({}, props, {\n    ref: externalRef\n  }), /*#__PURE__*/React.createElement(ReorderContext.Provider, {\n    value: context\n  }, children));\n}\n_s(ReorderGroup, \"jgRzpDaggWbUBaD8btWBmPdYoCE=\", false, function () {\n  return [useConstant];\n});\n_c2 = ReorderGroup;\nvar Group = /*#__PURE__*/forwardRef(ReorderGroup);\n_c3 = Group;\nfunction getValue(item) {\n  return item.value;\n}\nfunction compareMin(a, b) {\n  return a.layout.min - b.layout.min;\n}\nexport { Group, ReorderGroup };\nvar _c2, _c3;\n$RefreshReg$(_c2, \"ReorderGroup\");\n$RefreshReg$(_c3, \"Group\");","map":{"version":3,"names":["__rest","__assign","invariant","React","forwardRef","useRef","useEffect","ReorderContext","motion","useConstant","checkReorder","ReorderGroup","_a","externalRef","_s","children","_b","as","_c","axis","onReorder","values","props","Component","order","isReordering","Boolean","context","registerItem","value","layout","findIndex","entry","push","sort","compareMin","updateOrder","id","offset","velocity","current","newOrder","map","getValue","filter","indexOf","createElement","ref","Provider","_c2","Group","_c3","item","a","b","min","$RefreshReg$"],"sources":["A:/RAG/rag-frontend/src/node_modules/framer-motion/dist/es/components/Reorder/Group.mjs"],"sourcesContent":["import { __rest, __assign } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport * as React from 'react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroup(_a, externalRef) {\n    var children = _a.children, _b = _a.as, as = _b === void 0 ? \"ul\" : _b, _c = _a.axis, axis = _c === void 0 ? \"y\" : _c, onReorder = _a.onReorder, values = _a.values, props = __rest(_a, [\"children\", \"as\", \"axis\", \"onReorder\", \"values\"]);\n    var Component = useConstant(function () { return motion(as); });\n    var order = [];\n    var isReordering = useRef(false);\n    invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    var context = {\n        axis: axis,\n        registerItem: function (value, layout) {\n            /**\n             * Ensure entries can't add themselves more than once\n             */\n            if (layout &&\n                order.findIndex(function (entry) { return value === entry.value; }) === -1) {\n                order.push({ value: value, layout: layout[axis] });\n                order.sort(compareMin);\n            }\n        },\n        updateOrder: function (id, offset, velocity) {\n            if (isReordering.current)\n                return;\n            var newOrder = checkReorder(order, id, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter(function (value) { return values.indexOf(value) !== -1; }));\n            }\n        },\n    };\n    useEffect(function () {\n        isReordering.current = false;\n    });\n    return (React.createElement(Component, __assign({}, props, { ref: externalRef }),\n        React.createElement(ReorderContext.Provider, { value: context }, children)));\n}\nvar Group = forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\nexport { Group, ReorderGroup };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}