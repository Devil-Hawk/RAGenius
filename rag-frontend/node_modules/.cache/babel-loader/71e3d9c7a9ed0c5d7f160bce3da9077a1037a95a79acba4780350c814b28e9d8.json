{"ast":null,"code":"var _s = $RefreshSig$();\nimport { __rest, __assign } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { loadExternalIsValidProp } from '../../render/dom/utils/filter-props.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig(_a) {\n  _s();\n  var children = _a.children,\n    isValidProp = _a.isValidProp,\n    config = __rest(_a, [\"children\", \"isValidProp\"]);\n  isValidProp && loadExternalIsValidProp(isValidProp);\n  /**\n   * Inherit props from any parent MotionConfig components\n   */\n  config = __assign(__assign({}, useContext(MotionConfigContext)), config);\n  /**\n   * Don't allow isStatic to change between renders as it affects how many hooks\n   * motion components fire.\n   */\n  config.isStatic = useConstant(function () {\n    return config.isStatic;\n  });\n  /**\n   * Creating a new config context object will re-render every `motion` component\n   * every time it renders. So we only want to create a new one sparingly.\n   */\n  var context = useMemo(function () {\n    return config;\n  }, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);\n  return /*#__PURE__*/React.createElement(MotionConfigContext.Provider, {\n    value: context\n  }, children);\n}\n_s(MotionConfig, \"tO5bvUVqLxw2p027BDiStQY978M=\", false, function () {\n  return [useConstant];\n});\n_c = MotionConfig;\nexport { MotionConfig };\nvar _c;\n$RefreshReg$(_c, \"MotionConfig\");","map":{"version":3,"names":["__rest","__assign","React","useContext","useMemo","MotionConfigContext","loadExternalIsValidProp","useConstant","MotionConfig","_a","_s","children","isValidProp","config","isStatic","context","JSON","stringify","transition","transformPagePoint","reducedMotion","createElement","Provider","value","_c","$RefreshReg$"],"sources":["A:/RAG/rag-frontend/src/node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs"],"sourcesContent":["import { __rest, __assign } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { loadExternalIsValidProp } from '../../render/dom/utils/filter-props.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig(_a) {\n    var children = _a.children, isValidProp = _a.isValidProp, config = __rest(_a, [\"children\", \"isValidProp\"]);\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = __assign(__assign({}, useContext(MotionConfigContext)), config);\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(function () { return config.isStatic; });\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    var context = useMemo(function () { return config; }, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);\n    return (React.createElement(MotionConfigContext.Provider, { value: context }, children));\n}\n\nexport { MotionConfig };\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,SAASC,mBAAmB,QAAQ,uCAAuC;AAC3E,SAASC,uBAAuB,QAAQ,yCAAyC;AACjF,SAASC,WAAW,QAAQ,8BAA8B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,EAAE,EAAE;EAAAC,EAAA;EACtB,IAAIC,QAAQ,GAAGF,EAAE,CAACE,QAAQ;IAAEC,WAAW,GAAGH,EAAE,CAACG,WAAW;IAAEC,MAAM,GAAGb,MAAM,CAACS,EAAE,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;EAC1GG,WAAW,IAAIN,uBAAuB,CAACM,WAAW,CAAC;EACnD;AACJ;AACA;EACIC,MAAM,GAAGZ,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEE,UAAU,CAACE,mBAAmB,CAAC,CAAC,EAAEQ,MAAM,CAAC;EACxE;AACJ;AACA;AACA;EACIA,MAAM,CAACC,QAAQ,GAAGP,WAAW,CAAC,YAAY;IAAE,OAAOM,MAAM,CAACC,QAAQ;EAAE,CAAC,CAAC;EACtE;AACJ;AACA;AACA;EACI,IAAIC,OAAO,GAAGX,OAAO,CAAC,YAAY;IAAE,OAAOS,MAAM;EAAE,CAAC,EAAE,CAACG,IAAI,CAACC,SAAS,CAACJ,MAAM,CAACK,UAAU,CAAC,EAAEL,MAAM,CAACM,kBAAkB,EAAEN,MAAM,CAACO,aAAa,CAAC,CAAC;EAC3I,oBAAQlB,KAAK,CAACmB,aAAa,CAAChB,mBAAmB,CAACiB,QAAQ,EAAE;IAAEC,KAAK,EAAER;EAAQ,CAAC,EAAEJ,QAAQ,CAAC;AAC3F;AAACD,EAAA,CAlBQF,YAAY;EAAA,QAWCD,WAAW;AAAA;AAAAiB,EAAA,GAXxBhB,YAAY;AAoBrB,SAASA,YAAY;AAAG,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}